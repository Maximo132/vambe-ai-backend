"""Add authentication models (User, AuthToken, LoginHistory)

Revision ID: initial
Revises: 
Create Date: 2025-06-19 13:45:30.963777

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'initial'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('external_id', sa.String(length=100), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('full_name', sa.String(length=201), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('role', sa.Enum('SUPERADMIN', 'ADMIN', 'AGENT', 'CUSTOMER', 'GUEST', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('locked_until', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('verification_token', sa.String(length=100), nullable=True),
    sa.Column('verification_token_expires', sa.DateTime(), nullable=True),
    sa.Column('password_reset_token', sa.String(length=100), nullable=True),
    sa.Column('password_reset_expires', sa.DateTime(), nullable=True),
    sa.Column('two_factor_enabled', sa.Boolean(), nullable=False),
    sa.Column('two_factor_secret', sa.String(length=255), nullable=True),
    sa.Column('backup_codes', sa.JSON(), nullable=True),
    sa.Column('email_notifications', sa.Boolean(), nullable=False),
    sa.Column('push_notifications', sa.Boolean(), nullable=False),
    sa.Column('sms_notifications', sa.Boolean(), nullable=False),
    sa.Column('last_password_change', sa.DateTime(), nullable=False),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('last_ip_address', sa.String(length=45), nullable=True),
    sa.Column('active_sessions', sa.JSON(), nullable=True),
    sa.Column('show_online_status', sa.Boolean(), nullable=False),
    sa.Column('allow_direct_messages', sa.Boolean(), nullable=False),
    sa.Column('theme', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('password_reset_token'),
    sa.UniqueConstraint('verification_token')
    )
    op.create_index('idx_user_created_at', 'users', ['created_at'], unique=False)
    op.create_index('idx_user_email_lower', 'users', [sa.literal_column('lower(email)')], unique=True)
    op.create_index('idx_user_role', 'users', ['role'], unique=False)
    op.create_index('idx_user_status', 'users', ['is_active', 'is_verified'], unique=False)
    op.create_index('idx_user_username_lower', 'users', [sa.literal_column('lower(username)')], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_external_id'), 'users', ['external_id'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('auth_tokens',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('token', sa.String(length=500), nullable=False),
    sa.Column('refresh_token', sa.String(length=500), nullable=True),
    sa.Column('token_type', sa.String(length=20), nullable=False),
    sa.Column('scopes', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('device_id', sa.String(length=255), nullable=True),
    sa.Column('device_name', sa.String(length=100), nullable=True),
    sa.Column('device_type', sa.String(length=50), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('region', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('location_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_revoked', sa.Boolean(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_auth_token_expires', 'auth_tokens', ['expires_at'], unique=False)
    op.create_index('idx_auth_token_user_device', 'auth_tokens', ['user_id', 'device_id'], unique=False)
    op.create_index('idx_auth_token_user_status', 'auth_tokens', ['user_id', 'is_revoked'], unique=False)
    op.create_index(op.f('ix_auth_tokens_created_at'), 'auth_tokens', ['created_at'], unique=False)
    op.create_index(op.f('ix_auth_tokens_device_id'), 'auth_tokens', ['device_id'], unique=False)
    op.create_index(op.f('ix_auth_tokens_expires_at'), 'auth_tokens', ['expires_at'], unique=False)
    op.create_index(op.f('ix_auth_tokens_id'), 'auth_tokens', ['id'], unique=False)
    op.create_index(op.f('ix_auth_tokens_is_revoked'), 'auth_tokens', ['is_revoked'], unique=False)
    op.create_index(op.f('ix_auth_tokens_refresh_token'), 'auth_tokens', ['refresh_token'], unique=True)
    op.create_index(op.f('ix_auth_tokens_token'), 'auth_tokens', ['token'], unique=True)
    op.create_index(op.f('ix_auth_tokens_user_id'), 'auth_tokens', ['user_id'], unique=False)
    op.create_table('conversations',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'ARCHIVED', 'DELETED', name='conversationstatus'), nullable=True),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversations_id'), 'conversations', ['id'], unique=False)
    op.create_index(op.f('ix_conversations_user_id'), 'conversations', ['user_id'], unique=False)
    op.create_table('documents',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('source', sa.String(length=500), nullable=True),
    sa.Column('doc_type', sa.String(length=50), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('weaviate_id', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    op.create_index(op.f('ix_documents_user_id'), 'documents', ['user_id'], unique=False)
    op.create_index(op.f('ix_documents_weaviate_id'), 'documents', ['weaviate_id'], unique=False)
    op.create_table('login_history',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('device_id', sa.String(length=255), nullable=True),
    sa.Column('device_name', sa.String(length=100), nullable=True),
    sa.Column('device_type', sa.String(length=50), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('region', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('latitude', sa.String(length=20), nullable=True),
    sa.Column('longitude', sa.String(length=20), nullable=True),
    sa.Column('location_data', sa.JSON(), nullable=True),
    sa.Column('client_name', sa.String(length=100), nullable=True),
    sa.Column('client_version', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('failure_reason', sa.Text(), nullable=True),
    sa.Column('is_2fa_used', sa.Boolean(), nullable=False),
    sa.Column('is_remember_me', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_login_history_created_at', 'login_history', ['created_at'], unique=False)
    op.create_index('idx_login_history_device', 'login_history', ['device_id', 'user_id'], unique=False)
    op.create_index('idx_login_history_user_status', 'login_history', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_login_history_created_at'), 'login_history', ['created_at'], unique=False)
    op.create_index(op.f('ix_login_history_device_id'), 'login_history', ['device_id'], unique=False)
    op.create_index(op.f('ix_login_history_expires_at'), 'login_history', ['expires_at'], unique=False)
    op.create_index(op.f('ix_login_history_id'), 'login_history', ['id'], unique=False)
    op.create_index(op.f('ix_login_history_status'), 'login_history', ['status'], unique=False)
    op.create_index(op.f('ix_login_history_user_id'), 'login_history', ['user_id'], unique=False)
    op.create_table('user_followers',
    sa.Column('follower_id', sa.String(length=36), nullable=False),
    sa.Column('followed_id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['followed_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('follower_id', 'followed_id')
    )
    op.create_table('messages',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('conversation_id', sa.String(length=36), nullable=False),
    sa.Column('role', sa.Enum('USER', 'ASSISTANT', 'SYSTEM', name='messagerole'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('message_type', sa.Enum('TEXT', 'IMAGE', 'DOCUMENT', name='messagetype'), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_messages_id'), 'messages', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_messages_id'), table_name='messages')
    op.drop_table('messages')
    op.drop_table('user_followers')
    op.drop_index(op.f('ix_login_history_user_id'), table_name='login_history')
    op.drop_index(op.f('ix_login_history_status'), table_name='login_history')
    op.drop_index(op.f('ix_login_history_id'), table_name='login_history')
    op.drop_index(op.f('ix_login_history_expires_at'), table_name='login_history')
    op.drop_index(op.f('ix_login_history_device_id'), table_name='login_history')
    op.drop_index(op.f('ix_login_history_created_at'), table_name='login_history')
    op.drop_index('idx_login_history_user_status', table_name='login_history')
    op.drop_index('idx_login_history_device', table_name='login_history')
    op.drop_index('idx_login_history_created_at', table_name='login_history')
    op.drop_table('login_history')
    op.drop_index(op.f('ix_documents_weaviate_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_user_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_table('documents')
    op.drop_index(op.f('ix_conversations_user_id'), table_name='conversations')
    op.drop_index(op.f('ix_conversations_id'), table_name='conversations')
    op.drop_table('conversations')
    op.drop_index(op.f('ix_auth_tokens_user_id'), table_name='auth_tokens')
    op.drop_index(op.f('ix_auth_tokens_token'), table_name='auth_tokens')
    op.drop_index(op.f('ix_auth_tokens_refresh_token'), table_name='auth_tokens')
    op.drop_index(op.f('ix_auth_tokens_is_revoked'), table_name='auth_tokens')
    op.drop_index(op.f('ix_auth_tokens_id'), table_name='auth_tokens')
    op.drop_index(op.f('ix_auth_tokens_expires_at'), table_name='auth_tokens')
    op.drop_index(op.f('ix_auth_tokens_device_id'), table_name='auth_tokens')
    op.drop_index(op.f('ix_auth_tokens_created_at'), table_name='auth_tokens')
    op.drop_index('idx_auth_token_user_status', table_name='auth_tokens')
    op.drop_index('idx_auth_token_user_device', table_name='auth_tokens')
    op.drop_index('idx_auth_token_expires', table_name='auth_tokens')
    op.drop_table('auth_tokens')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_external_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_user_username_lower', table_name='users')
    op.drop_index('idx_user_status', table_name='users')
    op.drop_index('idx_user_role', table_name='users')
    op.drop_index('idx_user_email_lower', table_name='users')
    op.drop_index('idx_user_created_at', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
